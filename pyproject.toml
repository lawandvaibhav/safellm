[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "safellm"
version = "0.1.0"
description = "Enterprise-grade guardrails and sanitization for LLM apps"
readme = "README.md"
authors = [{ name = "SafeLLM Team", email = "team@safellm.dev" }]
license = { text = "Apache-2.0" }
requires-python = ">=3.9"
dependencies = [
    "typing-extensions>=4.9",
]
keywords = ["llm", "guardrails", "safety", "validation", "pii", "sanitization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
]

[project.optional-dependencies]
full = [
    "jsonschema>=4.21",
    "pydantic>=2.6",
    "bleach>=6.1",
]
otel = [
    "opentelemetry-api>=1.25",
    "opentelemetry-sdk>=1.25",
]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.23",
    "hypothesis>=6.0",
    "ruff>=0.4",
    "mypy>=1.8",
    "black>=24.0",
    "isort>=5.12",
    "bandit>=1.7",
    # Type stubs for mypy
    "types-jsonschema",
    "types-bleach",
]

[project.urls]
Homepage = "https://github.com/safellm/safellm"
Documentation = "https://safellm.readthedocs.io"
Repository = "https://github.com/safellm/safellm"
Issues = "https://github.com/safellm/safellm/issues"
Changelog = "https://github.com/safellm/safellm/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/safellm"]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.mypy]
strict = true
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-v --cov=safellm --cov-report=term-missing --cov-report=html --cov-fail-under=65"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/safellm"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 100

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.safellm]
default_deny = true
telemetry = "basic"
redaction_style = "mask"
